diff --git a/gdk/gdk.c b/gdk/gdk.c
index 81f5427..a5aca4f 100644
--- a/gdk/gdk.c
+++ b/gdk/gdk.c
@@ -215,9 +215,11 @@ static const GOptionEntry gdk_args[] = {
   { "name",         0, 0,                     G_OPTION_ARG_CALLBACK, gdk_arg_name_cb,
     /* Description of --name=NAME in --help output */          N_("Program name as used by the window manager"),
     /* Placeholder in --name=NAME in --help output */          N_("NAME") },
+#ifndef GDK_WINDOWING_QUARTZ
   { "display",      0, G_OPTION_FLAG_IN_MAIN, G_OPTION_ARG_STRING,   &_gdk_display_name,
     /* Description of --display=DISPLAY in --help output */    N_("X display to use"),
     /* Placeholder in --display=DISPLAY in --help output */    N_("DISPLAY") },
+#endif
 #ifdef G_ENABLE_DEBUG
   { "gdk-debug",    0, 0, G_OPTION_ARG_CALLBACK, gdk_arg_debug_cb,  
     /* Description of --gdk-debug=FLAGS in --help output */    N_("GDK debugging flags to set"),
diff --git a/gtk/gtksettings.c b/gtk/gtksettings.c
index 644df01..115893d 100644
--- a/gtk/gtksettings.c
+++ b/gtk/gtksettings.c
@@ -1781,7 +1781,7 @@ settings_init_style (GtkSettings *settings)
       if (g_file_test (css_path,
                        G_FILE_TEST_IS_REGULAR))
         gtk_css_provider_load_from_path (css_provider, css_path, NULL);
-
+	  gtk_css_provider_load_from_data(css_provider,".tooltip { border-width:0; border-radius:0; }",-1,NULL);
       g_free (css_path);
     }
 
diff --git a/gtk/gtkwindow.c b/gtk/gtkwindow.c
index d6d3b4a..1b40b67 100644
--- a/gtk/gtkwindow.c
+++ b/gtk/gtkwindow.c
@@ -1640,6 +1640,7 @@ gtk_window_set_property (GObject      *object,
     {
     case PROP_TYPE:
       priv->type = g_value_get_enum (value);
+	  if(priv->type == GTK_WINDOW_POPUP)gtk_window_set_decorated(window,FALSE);
       break;
     case PROP_TITLE:
       gtk_window_set_title (window, g_value_get_string (value));
@@ -3933,8 +3934,8 @@ gtk_window_enable_csd (GtkWindow *window)
   g_assert (visual != NULL);
   gtk_widget_set_visual (widget, visual);
 
-  priv->client_decorated = TRUE;
-  gtk_style_context_add_class (gtk_widget_get_style_context (widget), GTK_STYLE_CLASS_CSD);
+  priv->client_decorated = FALSE;
+  //gtk_style_context_add_class (gtk_widget_get_style_context (widget), GTK_STYLE_CLASS_CSD);
 }
 
 static void
